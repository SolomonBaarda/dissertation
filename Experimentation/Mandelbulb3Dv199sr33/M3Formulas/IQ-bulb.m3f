[OPTIONS]
.Version = 2
.DEscale = 1.5
.SIpower = 2
.Double Power = 8
.Double z-AnglePow = 8
.Double z-Mul = 1
.Integer Mode = 0
.Integer Atan2Mode = 0
[CONSTANTS]
Double = 1
[CODE]
558BEC81EC400000005356578B75088B7E308BD8D9D0DD03D8C8DD02D8C8DD01
D8C8DEC1DEC1D9FADD55F8DD47F0D9C9D9E1D9F1D9E8D9C1D9F8D9F0DEC1D9FD
D9C9DDD8DD5DF0DD03D8C8DD01D8C8DEC1D9FADD55E8DD02D9F3DC4FF0D9FBDD
5DD8DD5DE090DD03DD01D9F3DC4FE8D9FBDD5DC8DD5DD0D9D0DD45E0DC4DD0DC
4DF0DC4618DD1BDD45D8DC4DF0DC4620DD1ADD45E0DC4DC8DC4FE0DC4DF0DC46
28DD19D9D08BC35F5E5B8BE55DC20800
[END]

Description:
This formula was proposed by Inigo Quilez in 2009 as a "correction" of Mandelbulb formula.
http://iquilezles.org/www/articles/mandelbulb/mandelbulb.htm

sq_r := sqrt(x*x+y*y+z*z)
sq_xz := sqrt(x*x+z*z)
r:= sq_r ^ Power

theta  = acos(y/sq_r) * P = atan2( sq_xz , y) * P
// This is true everywhere, because sq_r is >=0 ; atan2(a,b) differs from atan(a/b) when b<0
// I must use atan2 because 'acos' is missing in assembly.
zangle = atan2(x,z)  * zAP

x := sin(zangle)*sin(theta)*r+Cx
y := cos(theta)            *r+Cy
z := sin(theta)*cos(zangle)*r+Cz

Implemented by Luca G.N. 2011