[OPTIONS]
.Version = 4
.DEscale = .2
.DEoption = 11
.RStop = 1024
.SIpower = 2
.Double Scale =   2
.Boxscale Min R = 0.5
.Double Fold = 1
.Double Scale vary = 0
.Integer Sharpness (Integer 2+) = 6
.Double Fix (BoxFold) = 1
.Integer Sh. of BallFold (Int 3+) = 4
.Double Fix (BallFold) = .3
[CONSTANTS]
Double = .99
[CODE]
558BEC5657538B75088B7E3089C383C670EB4E909090D1E874167304D9C0EB04
D9E8D9C9D8C8D1E873FADCC975F6DDD8C3DD00D9E1508B47CCD9C0E8D6FFFFFF
58DC4FC4D9C9DD47D8D8C0D8E1D8CADEC1D9E8DEC2DEF1F64007807902D9E0C3
90E8CBFFFFFF89D0E8C4FFFFFF89C8E8BDFFFFFF837E60007F09FF4660DD47F0
DD5E58DD4658D9E8D9C1D9E1DEE1DC4FD0DEC1DD5E58DD47E0DC1F9BDFE0D0EC
7204D9E8EB5AD9C2D8C8D9C2D8C8DEC1D9C1D8C8DEC1D9E8DC47E0DC4FF8D9E8
DC67E0DC4FF8D9CAD8E1D9E49BDFE050D9E1D8F2D9C08B47C0D1E87304D9FAD1
D0E830FFFFFFDC4FB8D9E8D8C1D9CADEC1DEF158DECAD9C9D0EC7302D9E0DEC1
DD4658DEF1DD4108D8C9DD5908DCCBDCCADEC9DC46B8DD19DC46B0DD1ADC46A8
DD1B89D85B5F5E5DC20800
[END]

WARNING! If you use very high sharpness, I don't know what will happen (it may become
extremely slow)... But it has no sense
An Amazing Box, with Folding function modified as follows (x is each spatial coord);

 xp = fix1*x**p; (fast int pow, p is forced to be > 2)
 u=sgn(x)*xp+1;
 x=x+xp*(2*Fold-x);
 x=x/u;

Also radius folding is smooth (when minr<0.99);

 if minr>0.99
 r=1; // prevents fp troubles and speeds up a lot in this case
 else
 r = (x*x+y*y+z*z);
 m=(1+minr)/2; n=(1-minr)/2; r1=(r-m)/n; rs=sgn(r1); r1=abs(r1);
 rsqrt = sqrt(r1); // this slows down the convergence
 rp=fix2*(rsqrt**p); (fast int pow, p is forced to be > 3)
 r = rs*((rp+r1)/(rp+1) * n) + m;
 endif

 (then r = scale / r and is used as a multiplier for x,y,z)

This "smoothens" the folding function, replacing the "sawtooth" fold with a smooth curve
Result is very similar to standard ABox but with a bit of detail loss and "curvy" details...
Higher sharpness -> You get closer and closer to standard ABox...
Also, remember that smoothing has an interference with the scale. More smooth -> less scale
Inspired from an idea of Buddhi @ FractalForums.
Interesting results can be achieved with negative fix values (more smoothness, different look).

Luca GN 2011

19.03.2013 Jesse speedup modification