[OPTIONS]
.Version = 2
.DEoption = -1
.Integer Index1 = 1
.Integer Index2 = 2
.Single Offset 1 = 0
.Single Scale 1 = 1
.Single Scale 2 = 1
.Single Offset 2 = 0
[CONSTANTS]
Double = 0.1591549430918953
Double = 1.5707963267948966
Double = 0.1481481481481481
[CODE]
558BEC565750528B75088B7E308B77F083E603DD04F031D2D867ECD84FE8DC0F
D9C0DC67F8D9FCDEE9D8C0D9E8D8D9DFE0D0EC730CD9E8D8C0DEE181F2000000
80D9EBDEC9DC5708DFE0D0EC720AD9EBDEE981F200000080D9C0D8C8D8C9DC4F
10DEE9F7C2000000807902D9E05A588B77F4D84FE483E603D847E0DC04F0DD1C
F05F5E5DC20800
[END]

Like the _YplusSinZ formula, but with more options and a fast sine approximation.

Indices gives the vectorparts: 
0: x
1: y
2: z
3: w

Don't use index 3 (w) with 3d analytic formulas, because w is used for the distance estimation! 

The formula:
Vec[Index1] = Vec[Index1] + SineApprox((Vec[Index2] - Offset1) * Scale1) * Scale2 + Offset2
