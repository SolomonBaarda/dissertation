[OPTIONS]
.Version = 6
.DEscale = 0.2
.ADEscale = 1.1
.DEoption = 6
.RStop = 1024
.SIpower = 2
.Double Scale = 2
.Double CScale X = 1
.Double CScale Y = 1
.Double CScale Z = 1
.Double CScale W = 1
.6SingleAngles Rotation = 0
[CODE]
558BEC53565789C38B75088B7E30DD41
08DD01DD02DD0390D9E0D8D1DFE0D0EC
7202D9C9D8D2DFE0D0EC7202D9CAD9E0
D9C9D9E0D8D2DFE0D0EC7202D9CAD9E0
D9C990D9E0D8D3DFE0D0EC7202D9CBD9
E0D9C9D9E0D8D3DFE0D0EC7202D9CBD9
E0D9C9D9CAD9E0D8D3DFE0D0EC7202D9
CBD9E0D9CA9083EF28D9C0D84FF4D9C2
D84FF0DEC1D9C3D84FECDEC1D9C4D84F
E8DEC1DD1BD9C0D84FE4D9C2D84FE0DE
C1D9C3D84FDCDEC1D9C4D84FD8DEC1DD
1AD9C0D84FD4D9C2D84FD0DEC1D9C3D8
4FCCDEC1D9C4D84FC8DEC1DD19D84FC4
D9C9D84FC0DEC1D9C9D84FBCDEC1D9C9
D84FB8DEC1DD590883C728DD4108DD01
DD02DD03DD47F0909090D9C0DC8EE800
0000DD9EE8000000DCCCDCCBDCCADCC9
D9E8DEE9D9E0DD47E8D8C9D8C2DD1BDD
47E0D8C9D8C3DD1ADD47D8D8C9D8C4DD
19DD47D0D8C9D8C5DD5908DDD8DDD8DD
D8DDD8DDD889D85F5E5B5DC20800
[END]

Description:

Thanks a lot (I mean a lot) to Syntopia for this formula.
This is a 4D extension of the 3D Sierpinski KIFS, with a built-in 4D rotation.
In fact if you try CScaleW=0 you get again the normal 3D Sierpinski solid!
"Source code" with small modifications and comments;

float Sierpinski4(vec4 z)
{
	float r;
	
	int n = 0;
	while (n < Iterations) {

		// This is the hyper-tetraedral folding
		if(z.x+z.y<0.0) z.xy = -z.yx;
		if(z.x+z.z<0.0) z.xz = -z.zx;
		if(z.y+z.z<0.0) z.zy = -z.yz;
		if(z.x+z.w<0.0) z.xw = -z.wx;
		if(z.y+z.w<0.0) z.yw = -z.wy;
		if(z.z+z.w<0.0) z.zw = -z.wz;
		Rotate4D (z,Angles4D); // <- placed by me to make it a "true" KIFS
		
		z = z*Scale - Offset4*(Scale-1.0);		
		n++;
	}
	
	return (length(z) ) * pow(Scale, -float(n));
}


LUCA GN 2011