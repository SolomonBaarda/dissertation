[OPTIONS]
.Version = 2
.DEscale = 1
.SIpower = 2
.Double a-x = 1
.Double a-y = 0
.Double a-z = 0
.Double b-x = 1
.Double b-y = 0
.Double b-z = 0
[CONSTANTS]
Double = 3
[CODE]
558BEC81ECA40000005356578B75088B7E308BD8DD03DD9D64FFFFFFDD02DD9D
6CFFFFFFDD01DD9D74FFFFFFD9D0DD4618DD9D7CFFFFFFDD4620DD9D84FFFFFF
DD4628DD9D8CFFFFFFD9D0DD47F0DD9D94FFFFFFDD47E8DD9D9CFFFFFFDD47E0
DD9DA4FFFFFFD9D0DD47D8DD9DACFFFFFFDD47D0DD9DB4FFFFFFDD47C8DD9DBC
FFFFFFD9D0DD8564FFFFFFDC8D64FFFFFFDD856CFFFFFFDC8D6CFFFFFFDEC1D9
FADD5DECDD4594DC4D94DD459CDC4D9CDEC1D9FADD5DF4DD45ECDC4DF4D9EEDE
D9DFE09E751FDD8574FFFFFFD9E0DC4DA4DD5DC4DD8574FFFFFFDC4DA4DD9D5C
FFFFFFEB5FDD8574FFFFFFDC4DA4DD45ECDC4DF4DEF9D9E8DEE1DD8564FFFFFF
DC4D94DD856CFFFFFFDC4D9CDEE9DEC9DD5DC4DD8574FFFFFFDC4DA4DD45ECDC
4DF4DEF9D9E8DEE1DD4594DC8D6CFFFFFFDD8564FFFFFFDC4D9CDEC1DEC9DD9D
5CFFFFFFDD45ECDC4DA4DD45F4DC8D74FFFFFFDEC1DD5DCCDD45C4DC4DC4DD85
5CFFFFFFDC8D5CFFFFFFDEC1D9FADD5DECDD857CFFFFFFDC8D7CFFFFFFDD4584
DC4D84DEC1D9FADD5DF4DD45ECDC4DF4D9EEDED9DFE09E7516DD45CCD9E0DC4D
8CDD5DD4DD45CCDC4D8CDD5DDCEB56DD45CCDC4D8CDD45ECDC4DF4DEF9D9E8DE
E1DD45C4DC8D7CFFFFFFDD855CFFFFFFDC4D84DEE9DEC9DD5DD4DD45CCDC4D8C
DD45ECDC4DF4DEF9D9E8DEE1DD857CFFFFFFDC8D5CFFFFFFDD45CCDC4D84DEC1
DEC9DD5DDCDD45ECDC4D8CDD45F4DC4DCCDEC1DD5DE4DD8564FFFFFFDC8D64FF
FFFFDD856CFFFFFFDC8D6CFFFFFFDEC1D9FADD5DECDD45ACDC4DACDD45B4DC4D
B4DEC1D9FADD5DF4DD45ECDC4DF4D9EEDED9DFE09E751FDD8574FFFFFFD9E0DC
4DBCDD5DC4DD8574FFFFFFDC4DBCDD9D5CFFFFFFEB5FDD8574FFFFFFDC4DBCDD
45ECDC4DF4DEF9D9E8DEE1DD8564FFFFFFDC4DACDD856CFFFFFFDC4DB4DEE9DE
C9DD5DC4DD8574FFFFFFDC4DBCDD45ECDC4DF4DEF9D9E8DEE1DD45ACDC8D6CFF
FFFFDD8564FFFFFFDC4DB4DEC1DEC9DD9D5CFFFFFFDD45ECDC4DBCDD45F4DC8D
74FFFFFFDEC1DD5DCCDD45D4DC65C4DCA57CFFFFFFDD5DC4DD45DCDCA55CFFFF
FFDC6584DD9D5CFFFFFFDD45E4DC65CCDC658CDD5DCCDD8564FFFFFFDC8D64FF
FFFFDD856CFFFFFFDC8D6CFFFFFFDEC1DD5DECF745F0FFFFFF7F7524837DEC00
751EC745D400000000C745D800000000C745DC00000000C745E000000000EB78
DD8574FFFFFFDC0F90909090DC8D74FFFFFFDC75ECD9E8DEE1DD5DF4DD856CFF
FFFFDC0F90909090DC8D6CFFFFFFDD8564FFFFFFDC8D64FFFFFFDEE1DD45F4DC
8D64FFFFFFDEC9DD5DD4DD8564FFFFFFDC0F90909090DC8D64FFFFFFDD856CFF
FFFFDC8D6CFFFFFFDEE9DD45F4DC8D6CFFFFFFDEC9DD5DDCDD8574FFFFFFDC8D
74FFFFFFDD45ECDC0F90909090DEE1DC8D74FFFFFFDD5DCCDD45C4DC45D4DD9D
64FFFFFFDD855CFFFFFFDC45DCDD9D6CFFFFFFDD45CCDC45E4DD9D74FFFFFFD9
D0DD8564FFFFFFDD1BDD856CFFFFFFDD1ADD8574FFFFFFDD19D9D08BC35F5E5B
8BE55DC20800
[END]


Description:

Ikenaga map 3D, using White-Nylander triplex theory.
Beautiful Julia sets (but not so good M-set...)
Please, note that this function is faithful to UF 2D projection for the Julia, but differs for the M-set.
This is due to the fact that M-set correct formula should be plotted after a "pretransform" like this

init:
( S' = C ) -> this is done automatically by MB3D itself
S'' =  sqrt((1-S')/K) (this must be done manually)

Where K is a constant 3D vector: (3.0 , 0.0, 0.0) - or simply a scaling by an equivalent factor

----------------------------------------------

This function was originally described in "The Armchair Universe" book.
Added two user multiplicative constants a & b

S' =  S^3 + S*a*C - S*b - C

S contains x,y,z and C contains the constants.
The code is very long, because every multiplication implies 3D rotations and other "stuff" like.
Plus, we need to use the stack because we must keep many temporary stuff in memory during calculus.

Implemented by Luca GN 2011
