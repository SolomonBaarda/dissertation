[OPTIONS]
.Version = 2

.DEscale = 1
.SIpower = 1
.Double a-x = 1
.Double a-y = 0
.Double a-z = 0
.Double b-x = 0
.Double b-y = 0
.Double b-z = 0
.Double c-x = 0
.Double c-y = 0
.Double c-z = 0
.Double d-x = 1
.Double d-y = 0
.Double d-z = 0
[CONSTANTS]
Double = 1e-90
Double = 1e90
[CODE]
558BEC81ECC40000005356578B75088B7E308BD8DD03DD9D44FFFFFFDD02DD9D
4CFFFFFFDD01DD9D54FFFFFFD9D0DD47F0DD9D5CFFFFFFDD47E8DD9D64FFFFFF
DD47E0DD9D6CFFFFFFDD47D8DD9D74FFFFFFDD47D0DD9D7CFFFFFFDD47C8DD9D
84FFFFFFDD47C0DD9D8CFFFFFFDD47B8DD9D94FFFFFFDD47B0DD9D9CFFFFFFDD
47A8DD9DA4FFFFFFDD47A0DD9DACFFFFFFDD4798DD9DB4FFFFFFD9D0DD8544FF
FFFFDC8D44FFFFFFDD854CFFFFFFDC8D4CFFFFFFDEC1D9FADD5DECDD458CDC4D
8CDD4594DC4D94DEC1D9FADD5DF4DD45ECDC4DF4D9EEDED9DFE09E751CDD8554
FFFFFFD9E0DC4D9CDD5DCCDD8554FFFFFFDC4D9CDD5DD4EB5CDD8554FFFFFFDC
4D9CDD45ECDC4DF4DEF9D9E8DEE1DD8544FFFFFFDC4D8CDD854CFFFFFFDC4D94
DEE9DEC9DD5DCCDD8554FFFFFFDC4D9CDD45ECDC4DF4DEF9D9E8DEE1DD458CDC
8D4CFFFFFFDD8544FFFFFFDC4D94DEC1DEC9DD5DD4DD45ECDC4D9CDD45F4DC8D
54FFFFFFDEC1DD5DDCDD45CCDC45A4DD5DCCDD45D4DC45ACDD5DD4DD45DCDC45
B4DD5DDCDD45CCDC4DCCDD45D4DC4DD4DEC1DD45DCDC4DDCDEC1DD55E4DC1FDF
E09E771ADD4708DD9544FFFFFFDD954CFFFFFFDD9D54FFFFFFE9D6010000DD85
5CFFFFFFDC8D5CFFFFFFDD8564FFFFFFDC8D64FFFFFFDEC1D9FADD5DF4DD45EC
DC4DF4D9EEDED9DFE09E7525DD8554FFFFFFD9E0DC8D6CFFFFFFDD9D3CFFFFFF
DD8554FFFFFFDC8D6CFFFFFFDD5DBCEB71DD8554FFFFFFDC8D6CFFFFFFDD45EC
DC4DF4DEF9D9E8DEE1DD8544FFFFFFDC8D5CFFFFFFDD854CFFFFFFDC8D64FFFF
FFDEE9DEC9DD9D3CFFFFFFDD8554FFFFFFDC8D6CFFFFFFDD45ECDC4DF4DEF9D9
E8DEE1DD855CFFFFFFDC8D4CFFFFFFDD8544FFFFFFDC8D64FFFFFFDEC1DEC9DD
5DBCDD45ECDC8D6CFFFFFFDD45F4DC8D54FFFFFFDEC1DD5DC4DD853CFFFFFFDC
8574FFFFFFDD9D3CFFFFFFDD45BCDC857CFFFFFFDD5DBCDD45C4DC4584DD5DC4
D9E8DC75E4DD5DE4DD853CFFFFFFDC8D3CFFFFFFDD45BCDC4DBCDEC1D9FADD5D
ECDD45CCDC4DCCDD45D4DC4DD4DEC1D9FADD5DF4DD45ECDC4DF4D9EEDED9DFE0
9E751CDD45C4DC4DDCDD9D44FFFFFFDD45C4D9E0DC4DDCDD9D4CFFFFFFEB5CDD
853CFFFFFFDC4DCCDD45BCDC4DD4DEC1DC4DE4DD45C4DC4DDCDD45ECDC4DF4DE
F9D9E8DEC1DEC9DD9D44FFFFFFDD45CCDC4DBCDD853CFFFFFFDC4DD4DEE9DC4D
E4DD45C4DC4DDCDD45ECDC4DF4DEF9D9E8DEC1DEC9DD9D4CFFFFFFDD45F4DC4D
C4DD45ECDC4DDCDEE9DC4DE4DD9D54FFFFFFD9D0DD8544FFFFFFDD1BDD854CFF
FFFFDD1ADD8554FFFFFFDD19D9D08BC35F5E5B8BE55DC20800
[END]


Description:

This is an attempt to extend the Mobius transformation  (that normally implies complex numbers) in the 3D triplex space.
See Wikipedia for an explanation of what is a Mobius transform (in 2D complex plane).
Why you need it? Well, with *conditional* M. transforms you can for example create quasi-fuchsian fractals, if you set all params correctly.
This needs "very specialistic knowledge", because you need to use a set of appropriate parameters and conditions in order to get the correct effect.
2D conditional Mobius transforms give the famous fractals described in "Indra's pearls" book.

Rewrite the triplex theory here is pointless. So check the forum;

http://www.fractalforums.com/theory/triplex-algebra/

I used the so-called "non-trig forms", because they are much faster.

Basically here is a rough transcription of the formula;

T1 = a t* S + b
if mod(T1) <= 1e-90
S' = (1e90,1e90,1e90)
else
T0 = a t* S + c
S' = T0 t/ T1
endif

T0 and T1 are 3d temporary vectors, that I must use for the computation because the transform is composite

where as usual S contains the spatial coordinates x,y,z.
t* is the triplex multiplication as defined in the topic.
t/ is the triplex division as defined in the topic.