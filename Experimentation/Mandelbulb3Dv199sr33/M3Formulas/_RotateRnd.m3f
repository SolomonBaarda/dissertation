[OPTIONS]
.Version = 2
.DEoption = -1
.Double XY Rot Range (-2 ... 2) = 0.2
.Double XZ Rot Range = 0.2
.Double YZ Rot Range = 0.2
.INTEGER XY Rand. Seed = -84371888
.INTEGER XZ Rand. Seed = -84375168
.INTEGER YZ Rand. Seed = -84321698
[CONSTANTS]
Double = 2
Double = 1.22078e-4
Double = 1
[CODE]
558BEC5657538B750889C38B7E3083C4D0FF86D000000089542410908B86D000
0000662D073DF7E08944240C8B47DC66F764240C25FF3F00008904248B47D866
F764240C25FF3F0000894424048B47D466F764240C25FF3F00008944240890DD
47F0D9E1DD07DED9DFE0D0EC726E66BA0000DB0424DC4F08DC6710DC4FF0D9E8
D8D9DFE0D0EC730ADD07DEE166BA0100EB16D9E8D9E0D8D9DFE0D0EC720ADD07
DEC1D9E066BA0100D9C0D8C8D9E8DEE1D9FA6683FA007402D9E08B542410DD03
D8CADD02D8CADEE1DD03D8CADD02D8CCDEC1DD1BDD1ADDD8DDD8DDD890DD47E8
D9E1DD07DED9DFE0D0EC726B66BA0000DB442404DC4F08DC6710DC4FE8D9E8D8
D9DFE0D0EC730ADD07DEE166BA0100EB16D9E8D9E0D8D9DFE0D0EC720ADD07DE
C1D9E066BA0100D9C0D8C8D9E8DEE1D9FA6683FA007402D9E0DD03D8CADD01D8
CADEE1DD03D8CADD01D8CCDEC1DD1BDD19DDD8DDD8DDD890DD47E0D9E1DD07DE
D9DFE0D0EC726F66BA0000DB442408DC4F08DC6710DC4FE0D9E8D8D9DFE0D0EC
730ADD07DEE166BA0100EB16D9E8D9E0D8D9DFE0D0EC720ADD07DEC1D9E066BA
0100D9C0D8C8D9E8DEE1D9FA6683FA007402D9E08B542410DD02D8CADD01D8CA
DEE1DD02D8CADD01D8CCDEC1DD1ADD19DDD8DDD8DDD883C43089D85B5F5E5DC2
0800
[END]

Note 1; This transform may be a bit slow (more fast if you disable some rotations,
use values out of range like 3)
Note 2; A rotation range of '0' (or '-0') is NOT reccomended because it involves in
no rotation; the calculus are way faster if you set a value out of range (and the
result is identical).

This special transform generates a pseudorandom vector that depends on the iteration
count, and a random seed that you can choose for each axis.
Then it rotates x,y,z "randomly".
The fractals that you will get will not be exactly self similar, that is fun!
Try to use this with Menger to see a fractal that changes when you zoom...

Luca GN 2012