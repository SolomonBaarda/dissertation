[OPTIONS]
.Version = 2
.DEscale = 0.2
.DEoption = 2
.RStop = 1024
.SIpower = 2
.Double Scale = 2
.Boxscale Min R = 0
.Double Fold = 1
.3SingleAngles Rotation1 = 0
.Double Linear Pull = 2
.Double Postlinear Pull = 2
.Double Pull Effect = 1
.Integer Pull fiddler (0 to 3) = 0
[CODE]
558BEC81EC3C0000005356578B7D0889C38B773081C780000000DD46ACE80800
0000E99E000000909090B8000000008945F8DD03D9E1D8D9DFE0D0EC7303FF45
F8DD02D9E1D8D9DFE0D0EC7303FF45F8DD01D9E1D8D9DFE0D0EC7303FF45F88B
469883E0033345F80F8551000000DC4E9CDD03D9EED8D9DFE0D0EC7304D9E8EB
04D9E8D9E0D8CADEE9DD1BDD02D9EED8D9DFE0D0EC7304D9E8EB04D9E8D9E0D8
CADEE9DD1ADD01D9EED8D9DFE0D0EC7304D9E8EB04D9E8D9E0D8CADEE9DD19DD
D8C3909090DD03DD02DD0190D9C0D84EBCD9C2D84EB8DEC1D9C3D84EB4DEC1D9
C1D84ED4D9C3D84ED0DEC1D9C4D84ECCDEC1D9CAD84EC8D9CBD84EC4DEC3D9CB
D84EC0DEC2DD19DD1ADD1B90DD46D8D9C0D9C0DCC2D9E0DD03D8D2DFE0D0EC72
06D9E0D8C3EB0CD8D1DFE0D0EC7304D9E0D8E3DD02D8D3DFE0D0EC7206D9E0D8
C4EB0CD8D2DFE0D0EC7304D9E0D8E4DD01D8D4DFE0D0EC7206D9E0D8C5EB0CD8
D3DFE0D0EC7304D9E0D8E5D9CBDDD8D9CBDDD8D9CBDDD8D9C0D84EBCD9C2D84E
B8DEC1D9C3D84EB4DEC1D9C1D84ED4D9C3D84ED0DEC1D9C4D84ECCDEC1D9CAD8
4EC8D9CBD84EC4DEC3D9CBD84EC0DEC290D9C0D8C9D9C2D8CBDEC1D9C3D8CCDE
C1DC56E0DFE0D0EC7307DDD8DD46E8EB16D9E8D8D1DFE0D0EC7207DDD8DC7EF0
EB05DED9DD46F0DD4108D8C9DD5908DCCBDCCADEC9DC47A8DD19DC47A0DD1ADC
4798DD1B90DD46A4E81DFEFFFF89D85F5E5B8BE55DC20800
[END]
KNOWN ISSUE:
This fractal has a bad DE, due to the cuts.

Description:

Modified version of a fractal invented by Hiato and posted
at Fractal forums. Dropped "Nonlinear pull" as it is C-dependent
and involves integer division, but kept the interesting
"linear pull", in a more customizable version.
Please note that a negative value for pulls disable them
while a negative effect works!

Apply this function before folding and again after adding C;

void linearPull(inout vec3 p, float lp, float effect, int fiddler) {
	int doLP = 0;
	if (abs(p.x)>w) doLP++;
	if (abs(p.y)>h) doLP++;
	if (abs(p.z)>t) doLP++;
	if (fiddler == doLP) {
		lp*=effect;
		if (p.x<0) p.x+=lp;
		else p.x-=lp;
		if (p.y<0) p.y+=lp;
		else p.y-=lp;
		if (p.z<0) p.z+=lp;
		else p.y-=lp;
	}
};