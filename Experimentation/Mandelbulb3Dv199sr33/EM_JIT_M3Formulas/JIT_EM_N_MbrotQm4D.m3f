[OPTIONS]
.DEScale = 0.9
.SIPow = 2
.Version = 9
[SOURCE]
procedure MandelbrotQM4D(var x, y, z, w: Double; PIteration3D: TPIteration3D);
var
   x1, y1, z1, w1, temp: double;

begin


 x1 := x*x - y*y - 2*z*z - z*w - 1.25*w*w;
 y1 := 2*x*y   	;
 z1 := 2*x*(z+w)   	;
 w1 := x*(w - 2*z)	;
 		
       // alsou
	//x1 :=sqr(x) -2*sqr(y) -y*z -1.25*sqr(z);
	//y1 :=2*x*(y+z);
	//z1 := x*(z - 2*y);


 x := x1  + PIteration3D^.J1; 
 y := y1  + PIteration3D^.J2; 
 z := z1  + PIteration3D^.J3; 
 w := w1; 


end;
[END]
 
Formula version 1.1
 
Mandelbrot - Quaternion Manipulated 4D
 
In quaternion numbers x^2 >< y^2. But z^2 (= j^2) = y^2 (= i^2). 
So equal values in z and y axis generate rotation surface. 
Unless numbers are being manipulated so that x^2 >< y^2 >< z^2
This formula introduces that quaternion number manipulation.
And it is zoomable like mandelbrot.

 * * *
By Edgar Malinovsky
