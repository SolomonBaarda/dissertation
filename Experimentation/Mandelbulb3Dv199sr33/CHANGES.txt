V1.99.33:
  -  Navigator-window:
     - new option to draw guides (center point, rule of thirds and the golden ratio)
     - new option to increase Quality in "HiQual"-Mode (by decreasing RayStep multiplier in steps of 0.05)
  - Batch renderer
     - fixed a bug when trying to cancel the Batch renderer
     - fixed the bug, that Post-processing is not always applied, when rendering in Batch mode

V1.99.32:
 - ZBuffer-generator is feature-complete now
 - added a "Guess params"-button
 - added some example images to the distribution and added the README-files from previous releases

V1.99.31:
  - added support for saving and on-the-fly PGMtoPNG-conversion of heightmaps (invoking the Java-based converter)

V1.99.31:
  - added java-based PNG-to-PNG16Bit-converter to circumvent the problems with the Delphi-PNG-Components

V1.99.30:
  - finished the UI of the ZBuffer-generator (which is now a new module)

V1.99.29:
  - basic implementation for generating 16bit zbuffers, unfortunately it is not possible to save them as 
    PNG using the official PNG-components because they have too many bugs
  - started to create new module to generate ZBuffers of high-quality

V1.99.28:
  - BTracer2: 
      - fixed a bug causing vertex colors to be gray (red, green, blue the same)
      - fixed a bug in BTracer2-UI: the Zoom in/out-buttons now also cause a refresh
  - BTracer2x64: 
      - mesh-reduction now supports both vertex-colors and uv-coordinates and is enabled by default
      - updated the documentation

V1.99.27
 - BTracer2:
    - many small improvements in the UI
    - removed auto-resize from OpenGL preview (too confusing in BTracer2-preview-mode)
    - auto-centre of OpenGL only when previewing the mesh

V1.99.26 (unreleased)
  - BTracer2:
      new optional and experimental OpenGL-preview (as replacement for the "voxel-style"-preview),
      but you can switch between both options at any time

V1.99.25
  - BTracer2:
     - option to create closed meshes (along the trace-range-boarders)
     - an official documentation for all BTracer2-related topics: BTracer2.pdf

V1.99.24
  - BTracer2:
     - added x- and y-ranges for tracing as well
     - finalized (again ;-)) the *.btr2cache-format
     - first working version of the 64bit app

V1.99.23 (unreleased)
  - BTracer2:
     - renamed the btracer2-cache-files into *.btr2cache
     - added the possibilities to load/save all settings as/from *.btrace2-file

V1.99.22 (unreleased)
  - BTracer2:
     - optimized and finalized BTracer2-Cache-format
     - new DE-option for the preview
     - a lot of internal refactoring in the UI

V1.99.21 (unreleased)
  - BTracer2:
     - support for cache-files with or without color-information
     - few optimizations
     - finalized btracer2-format
     - decided to make the 64bit-app a commercial app

V1.99.20 (unreleased)
   - options to rotate the mesh in the BTracer2-window
   - many minor changes to the BTracer2x64 app
   - first successful test with a huge mesh (resolution 2000x2000x2000)

V1.99.19 (unreleased)
   - added z-tracing-range in BTracer2
   - basic working UI for the BTracer2x64 app
      - "lossless" mesh reduction, currently not supporting vertex colors
   - many minor changes in the MB3D-app

V1.99.18 (unreleased)
   - many optimizations to the BTracer2x64 app
   - support for mesh simplification in the BTracer2x64 app
   - successfully created the first "serious mesh" (1500x1500x1500)
   - many minor changes in the MB3D-app

V1.99.17 (unreleased)
   - basic BTracer2x64 companion app (64bit) to generate meshes from btracer2-files
   - many minor changes in the MB3D-app

V1.99.16 (unreleased)
   - multithreaded streaming of btracer2-files finished (currently implemented as test inside MB3D)
   - improved error-handling for BTracer2

V1.99.15 (unreleased)
   - reworked most of the file-handling regarding *.btracer2-files
         - allows efficient, robust and multi-threaded reading and writing
   - increased default vertex-maximum for mesh-preview

V1.99.14 (unreleased)
     - revisited the btracer2-file format, updated loader and saver
     - some optimizations

V1.99.13 (unreleased)
     - skipped as well ;-)

V1.99.12
     - adaptive cache-size allowing to create meshes with larger size in the 32bit version
     - some final testing for the next release

V1.99.11 (unreleased)
     - added *.ply-export-format with vertex colors
     - *.ply-export is now the default format
     - adaptive cache-size allowing to create meshes with larger size in the 32bit version

V1.99.10 (unreleased)
     - added internal support for creating vertex-colors (i. e. actual rgb-colors) in addition to uv-coordinates
     - reworked most of the color-stuff
     - internal support for loading of btracer2-file

V1.99.9 (unreleased)
 - BTracer2:
    - added support for writing btracer-files in order to generate meshes of higher resolution (later)
    - reworked some of the color-stuff in order to allow true vertex-colors (later)

V1.99.8 (unreleased)
 - BTracer2:
    - improved preview (sometimes nothing showed up)
    - added fine 256^3 preview resolution
    - Fixed: BTracer2: mesh-generation could not be cancelled 
    - slightly reduced the height of the BTracer2-window in order to support lower screen-resolutions

V1.99.7
 - BTracer2:
    - some minor improvements and final testing
    - updated CHANGES.txt

V1.99.6 (unreleased)
 - BTracer2:
    - preview for vertex-colors (in point-mode)
    - improved/overhauled UI

V1.99.5 (unreleased)
 - BTracer2:
     - option to specify the maximum number of displayed vertices, which helps to increase performance a lot when creating high-res meshes

V1.99.4 (unreleased)
 - BTracer2:
    - overhauled/improved UI for
    - less, but more effective options

V1.99.3 (unreleased)
 - BTracer2:
   - general refactoring, many small improvements
   - OpenGl-Preview:
      - improved performance
      - does not affect performance when closed
      - more gentle looking colors (very subtle change, though)
      - improved performance of mesh-preview

V1.99.2 (unreleased)
 -removed the old BTracer module
 -refactoring
 -BTracer2 can be cancelled now

V1.99.1 (unreleased)
 - new BulbTracer2-module for generating meshes from your fractals (work in progress). It has the following advantages over BulbTracer:
    -more speed
    -much cleaner meshes
    -meshes with color-information (uv-coordinates)
    -less complicated/confusion options
    -the option for unlimited mesh resolution (not implemented yet)
 - introducing subrevision-numbers to be able to release minor updates without bumping version to 2.0. 
   (To reach version 2.0 using the old code-base just would feel wrong, I think people would expect 64bit features
    and a complete rewrite)

V1.99r2
 - fixed a bug regarding the generating of filenames when saving *.ply-sequences

V1.99
 - Point-Cloud-export:
    - major increase of sampling-quality
    - minor speed-in crease (is compensated by generating more samples)
    - jitter-option to improve sampling of round shapes, usually gives good results at high
      volumetric resulutions > 1000
    - option to generate normal vectors (is not the same as approximating the normals on the final mesh)
    - display elapsed time
 - Progressbar for the BulbTracer-preview
 - renamed the "MeshGen"-button back to "BulbTracer" (which was always the intended name)
 - updated the huge JIT-formula.pack ("EM_JIT_M3Formulas") from Alef from fractalforums.com
 - Added the missing formulas to the distribution: JosKn-KleinIFS, JosKn-ModIFS, K-TowerIFS
 - updated (again) the huge JIT-formula.pack ("EM_JIT_M3Formulas") from Alef from fractalforums.com
 - NEW RELEASE

V1.98
 - Point-Cloud-export in the BulbTracer-module, which is able to generate very nice
   models in high resolution in a short time, even with color (which is currently
   a limited feature).
   This mode is now the default mode in the BulbTracer, with a initial volumetric
   resolution of 256, which is nice to play around, because it is not soo slow, but
   often creates nice models.
   For creating a final mesh, a volumetric resolution of 2560 is not unusual, as the new mode
   is fast and takes not too much memory.

   To use the old way of generating mesh consiting of vertices and faces, choose "Mesh" as Mesh Type)
 - optimized parallel processing in BulbTracer, especially for point-clouds, in order to maximize performance
   (example: I can now trace a rather simple object at resolution 1024x1024x1024 in about 5 min,
   created about 5 Mio points in my tests)
 - optimized the mesh-writer for faster writing
 - OpenGl-preview for point-clouds
 - updated the huge JIT-formula.pack ("EM_JIT_M3Formulas") from Alef from fractalforums.com
 - NEW RELEASE

V1.97
 - finished the first working version of the external mesh-merging-tool (64 Bit)
 - Basic foundation for a scripting-module, utilizing the Pax-Compiler
 - HeightMapGen: hide right panel Dbl-Clicking
 - incluced a huge JIT-formula.pack from Alef released at the fractalforums.com
 - NEW RELEASE 

V1.96 (unreleased)
 - finished the new Heightmap-Generator:
    - generates heightmaps from arbitrary meshes
    - OpenGL preview for realtime positioning of the mesh
    - WaveFront OBJ format for loading of meshes is supported, only triangles and quadtrangles are imported
      (so if your mesh contains polygons with more than 4 corners you must convert them to triangles first,
      probably each 3D software will support this)
    - Two types of maps are supported:
        - 8 Bit PNG
        - 16 Bit PGM (PGM because Delphi seems not able to generate 16 Bit PNG's)
    - The map can be saved as image or directly saved as the next new slot to the maps folder

V1.95 (unreleased)
 - OpenGL:
    - updated the OpenGL-functions to use the OpenGl 4.5 Headers from
    - Vertex- and Fragment-Shaders are supported now, too. Using them in the
      new "HMapGen"-module

V1.94 (unreleased)
 - experimental new module "HMapGen" to create heightmaps from meshes
 - BulbTracer:
    - new lwo2 (Lightwave3D 6.0)-output format for generated meshes (much smaller than *.obj)
    - improved the speed of the mesh-merging-process
    - many other improvements

V1.93 (unreleased)
 - BulbTracer:
    - Optional mesh simplification using Quadric Mesh Simplification ( http://cseweb.ucsd.edu/~ravir/190/2016/garland97.pdf )
    - May also load params from harddrive (rather than only importing the current param from main)
    - Support for generating mesh-sequences (by loading *.mp3-sequences, for example those generated with the animation editor)
    - Additional function to generate only the currently displayed mesh in sequence-mode
 - fixed some problems regarding the mp3-output in the animation-editor

V1.92 (unreleased)
 - new "m3p"-output-option in the animation editor
 - new "Unprocessed raw mesh"-output option in the mesh-generator allowing the creating of larger meshes becaue the
   mesh-refinement is done in an external app
 - external MB3DMeshMerge-64Bit-application which is capable of processing huge meshess
 - removed the "Report a bug"-function (the site for bug-reporting isn't maintained any more)

V1.91r2
 - FIXED: changed the system and library-language to English, all dialogs etc. should now be English

V1.91
- New BulbTracer-module to create meshes from within MB3D. Its supports the complete workflow of creating,
  smoothing and previewing the meshes, so no additional software is required. It works fully multi-threaded,
  so it is fast, too.

  Hints:
   - to get started just press the "BTracer"-button to open the new module and press the
     "Import parameters"-button to import the current fractal
   - the sizing/positioning works the same way as in the VoxelStack-module, also
     the preview works very similar, but there are 2 new size settings for faster display
   - to get started quickly hust hit the "Generate Mesh"-button and watch what happens.
     You should get a small preview window showing the mesh if all worked right.

     If not, there is probably some problem with the OpenGL-display. In this rare case
     you can still create the meshes, but not preview them from within MB3D. You may use MeshLab instead.
   - Level of detail: Increase the "volumetric resolution" setting. Usually a value of 100...200 is a good start,
     and can 200...300 gives good results. The higher the value, the more detail, but also the more
     vertices and faces are generated, leading to larger files and more consumption of memory.
   - Smoothing: There are two different smoothing options:
       - oversampling: smoothes the mesh during creation and leads to increased creation time
       - Taubin-smooth: post-processing, usually very fast
     It depends on the fractal which works the best, some fractals work best with a combination
     of both.
   - Cancelling: you can cancel the mesh generation at any time and preview the changes
     which were made so far. This is the default behaviour. If you want just cancel,
     you can change this behaviour by chosing the option "Cancel immediately" from within
     the "Cancel type"-listbox.
   - Saving: Usually also saving is very fast and is done automatically. But if you want to try out many settings,
     you may want to turn saving temporary off. In this case, just choose "Dont save, only preview" from
     the "Save type"-listbox
   - Have fun!

- some global stability fixes

V1.90 RELEASE
- Support for animated (height)maps! They are defined in the "Map Sequences"-window in the Prefs-section
  and saved as local properties, i.e. you may use them independly of a specific set of fractal params.
   - You define an image sequence by filename, start frame, end frame, loop setting and frame increment
   - You assign this sequence to a logical map channel (any number) you wish
   - You use this channel as map number in your fractal, e.g. as color map or heightmap
   - Now you can preview the state at frame [n] by changing the frame number in the main view
     (this is just for test render, not for animating)
   - When you use this fractal in the animation window, the map will now be animated, i.e. at each frame
     of the animation the corresponding frame of the map will be calculated (accordingly to the settings
     you made) and the image-file will be loaded. If no image file is found it is asumed to be "black".

- new MutaGen-module to easily explore new combinations of formulas and settings
   - four types of mutations:
       - add, remove, exchange formulas
       - modify params of formulas
       - modify Julia-mode
       - modify iteration count
   - in the UI you may turn on/off those types individually, by specifying a weight, and you may specify an additional
     strength-parameter
   - you may browse through the already generated generations of mutations and restart on interesting results
   - you may resize the window to alter the size of the generated thumbnail images
   - you may cancel/restart the mutation-process at any time (sometimes there occur combinations of parameters
     which may lead to "endless" calculations, in such cases it is helpful to be able to just restart)
   - WARNING: some formula-combinations may SILENTLY crash the program, so please save often!
     Silently crashing means you will not see it immediately, often the UI starts to behave weird.
     We are working to improve this!
   - This is just the first version, e.g. interpolated functions are not supported yet!
   - Please note, that it is intented that this module does not create ready-to-use artworks from scratch.
     It can only happen, when you put in well made parameters (whith everything what makes a great artwork),
     that the mutation will keep many of those properties, making it a nice artwork.
     Or in short: the better your input, the better the output.

- Navigator-size may now be altered (you must expand the right toolbar to see the "Navigator size" control),
  the last setting is stored to the ini-file. Please note, that the size can only be defined in percent
  by using the arrows or listbox, but not by changing the window-size directly (this is due to some historic
  implementation details).

- Global rework of the UI, added theme-support, made "Glossy" the default theme,
  changed the captions of some buttons in order to make them more readable

- Formula-Window:
    - exchanging of formulas now works in two directions

- integrated formula-editor for creating/editing JIT-compiled formulas (see the new buttons in the formula window)
   - support for MB3D's parameters and constants, both the TIteration3D and TIteration3Dext-structs are supported
   - preprocessor to deal with the parameter-handling code
   - backed by the commercial PaxCompiler
   - included support for about 50 mathematical functions
   - watch out for formulas with the prefix "JIT" for examples!
   - Please note that dIFS-formulas are not supported yet because they are invoked differently,
     but also this will be fixed in future releases

- Many new formulas from the community at fractalforums.com

- New Info-Section at the main window, which now has a button to reach the official bug-reporting tool,
  please use the bug-reporting-tool to report bugs if possible!





